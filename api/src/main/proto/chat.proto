syntax = "proto3";

//Comando para generar clases
//py -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. .\chat.proto

service ChatAdmin {
// ENvía mensjes al servidor
rpc SendMessage(MessageRequest) returns (SendMesageResponse);

// Recupera múltipes mensajes del servidor _a partir de una fecha_
rpc GetMesseges(stream GetMessagesRequest) returns (stream MessagesResponse);

//crea un chat
rpc CreateChat(CreateChatRequest) returns (CreateChatResponse);

//recupera los chats en los que está incluido un usuairo
rpc GetChats(GetChatsRequest) returns (stream GetChatsResponse);

rpc UpdateMensage(MessageRequest) returns (MessagesResponse);

rpc DeleteMesage(MessageRequest) returns (MessagesResponse);
}

message GetChatsRequest {
    string idusuario = 1;
}

message GetChatsResponse {
    Chat chat = 1;
    repeated string usuarios = 2;
}

message CreateChatRequest {
    Chat chat = 1;
    repeated usuariosEnChat usuariosenchat= 2;
}

message CreateChatResponse {
    int64 idchatServer = 1;
}

//hora y fecha deben ser enviados en formato string a partir de un date time
//ejemplo 
// 2019-12-15 
// 02:38:03
message GetMessagesRequest {
    string fecha = 1;
    string hora = 2;
    int64 idchat = 3;
}

message MessagesResponse {
    Mensaje mensaje = 1;
}

message MessageRequest {
    Mensaje mensaje = 1;
}

message SendMesageResponse {
}


message Chat {
    int64 idchat = 1;
    string nombre = 2;
    int64 idprocedencia = 3;
}

message usuariosEnChat {
    Usuario usuario = 1;
    int64 idChat = 2;
}

message Usuario {
    string correo = 1;
    string username = 2;
}


message Mensaje {
    int64 idmensaje = 1;
    string mensaje = 2;
    string estado = 3;
    string fecha = 4;
    string correoremitente = 5;
    int64 idmensajeprocedencia = 6;
    int64 idchat = 7;
    string hora = 8;
}

message Date {
    int64 year = 1;
    int64 month = 2;
    int64 day = 3;
  }
